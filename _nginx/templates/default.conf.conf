upstream app_server {
  # Docker will resolve "django" to the appropriate container
  # Port 8000 is specified in gunicorn.cfg.py
  server django:8000;
}

server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

server {
  listen 80;
  client_max_body_size 4G;

  # Hostname
  server_name ${PROD_HOST_NAME} localhost;

  keepalive_timeout 5;

  location / {
    # checks for static file, if not found proxy to app
    try_files $uri @proxy_to_app;
  }

  location @proxy_to_app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://app_server;
  }

  location /static/ {
    # Path to static files - see volumes in docker-compose.yml
    alias /usr/share/nginx/html/static/;
  }

  # error_page 500 502 503 504 /500.html;
  # location = /500.html {
  #   root /path/to/app/current/public;
  # }
}
